// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZenithFit.WebAPI.Database;

namespace ZenithFit.WebAPI.Migrations
{
    [DbContext(typeof(ZenithFitDatabaseContext))]
    [Migration("20210208203404_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Articles", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ArticleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArticleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte[]>("ArticlePicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ArticlePictureThumb")
                        .HasColumnType("varbinary(max)");

                    b.Property<decimal>("ArticlePrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<bool?>("ArticleStatus")
                        .HasColumnType("bit");

                    b.Property<int>("CategoryId")
                        .HasColumnName("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("ManufacturerId")
                        .HasColumnName("ManufacturerID")
                        .HasColumnType("int");

                    b.HasKey("ArticleId")
                        .HasName("PK__Articles__9C6270C826A134A7");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Categories", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CategoryID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("CategoryId")
                        .HasName("PK__Categori__19093A2B0E46F8E4");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Clients", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ClientID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientEmail")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ClientFirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ClientLastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ClientPhone")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ClientRegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClientUsername")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ClientId")
                        .HasName("PK__Clients__E67E1A044D08DA90");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.CompleteOrder", b =>
                {
                    b.Property<int>("CompleteOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CompleteOrderID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnName("ClientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CompleteOrderDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("CompleteOrderSent")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnName("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("CompleteOrderId");

                    b.HasIndex("ClientId");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("CompleteOrder");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Manufacturers", b =>
                {
                    b.Property<int>("ManufacturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ManufacturerID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ManufacturerName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ManufacturerId")
                        .HasName("PK__Manufact__357E5CA1584EC634");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Notices", b =>
                {
                    b.Property<int>("NoticeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NoticeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("NoticeImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NoticeText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoticeTitle")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("NoticeId")
                        .HasName("PK__Notices__CE83CB858F8BDC96");

                    b.HasIndex("UserId");

                    b.ToTable("Notices");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.OrderDetails", b =>
                {
                    b.Property<int>("OrderDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrderDetailsID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("ArticleId")
                        .HasColumnName("ArticleID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("OrderId")
                        .HasColumnName("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("OrderDetailsId");

                    b.HasIndex("ArticleId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Orders", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrderID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnName("ClientID")
                        .HasColumnType("int");

                    b.Property<bool?>("OrderCancelled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("OrderPriceNoTax")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("OrderPriceTax")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("OrderStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseId")
                        .HasColumnName("WarehouseID")
                        .HasColumnType("int");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__C3905BAF4AE8A624");

                    b.HasIndex("ClientId");

                    b.HasIndex("UserId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.ProcurementDetails", b =>
                {
                    b.Property<int>("ProcurementDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProcurementDetailID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("ArticleId")
                        .HasColumnName("ArticleID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProcurementId")
                        .HasColumnName("ProcurementID")
                        .HasColumnType("int");

                    b.HasKey("ProcurementDetailId")
                        .HasName("PK__Procurem__67666710DC9D5C2B");

                    b.HasIndex("ArticleId");

                    b.HasIndex("ProcurementId");

                    b.ToTable("ProcurementDetails");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Procurements", b =>
                {
                    b.Property<int>("ProcurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProcurementID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ProcurementAccountAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("ProcurementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProcurementNote")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ProcurementNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("ProcurementTax")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("SupplierId")
                        .HasColumnName("SupplierID")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseId")
                        .HasColumnName("WarehouseID")
                        .HasColumnType("int");

                    b.HasKey("ProcurementId")
                        .HasName("PK__Procurem__95B4518CAA2BF8FB");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UserId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Procurements");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Ratings", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RatingID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleId")
                        .HasColumnName("ArticleID")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnName("ClientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("RatingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RatingGrade")
                        .HasColumnType("int");

                    b.HasKey("RatingId")
                        .HasName("PK__Ratings__FCCDF85CE0628B79");

                    b.HasIndex("ArticleId");

                    b.HasIndex("ClientId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.RequestDetails", b =>
                {
                    b.Property<int>("RequestDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RequestDetailsID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RequestId")
                        .HasColumnName("RequestID")
                        .HasColumnType("int");

                    b.Property<string>("RequestResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("RequestDetailsId");

                    b.HasIndex("RequestId");

                    b.HasIndex("UserId");

                    b.ToTable("RequestDetails");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Requests", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RequestID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnName("ClientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestDescription")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("RequestTitle")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("RequestId")
                        .HasName("PK__Requests__33A8519A648FA1C5");

                    b.HasIndex("ClientId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Roles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RoleNote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE3A32FDA6D3");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Suppliers", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SupplierID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SupplierAddress")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SupplierBankAccount")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SupplierContact")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SupplierEmail")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SupplierNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierPhone")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool>("SupplierStatus")
                        .HasColumnType("bit");

                    b.Property<string>("SupplierWeb")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("SupplierId")
                        .HasName("PK__Supplier__4BE66694FF6CCDB0");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.UserRoles", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserRoleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnName("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId")
                        .HasName("PK__UserRole__3D978A55393233A9");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserFirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UserLastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UserPhone")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UserUsername")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC54B38ACA");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Warehouses", b =>
                {
                    b.Property<int>("WarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WarehouseID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("WarehouseAddress")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("WarehouseName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("WarehouseNote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WarehouseId")
                        .HasName("PK__Warehous__2608AFD92D3BBDD6");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Articles", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Categories", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Articles__Catego__4E88ABD4")
                        .IsRequired();

                    b.HasOne("ZenithFit.WebAPI.Database.Manufacturers", "Manufacturer")
                        .WithMany("Articles")
                        .HasForeignKey("ManufacturerId")
                        .HasConstraintName("FK__Articles__Manufa__4D94879B")
                        .IsRequired();
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.CompleteOrder", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Clients", "Client")
                        .WithMany("CompleteOrder")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__CompleteO__Clien__693CA210")
                        .IsRequired();

                    b.HasOne("ZenithFit.WebAPI.Database.Orders", "Order")
                        .WithMany("CompleteOrder")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__CompleteO__Order__6B24EA82")
                        .IsRequired();

                    b.HasOne("ZenithFit.WebAPI.Database.Users", "User")
                        .WithMany("CompleteOrder")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__CompleteO__UserI__6A30C649")
                        .IsRequired();
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Notices", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Users", "User")
                        .WithMany("Notices")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Notices__UserID__3C69FB99")
                        .IsRequired();
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.OrderDetails", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Articles", "Article")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ArticleId")
                        .HasConstraintName("FK__OrderDeta__Artic__66603565");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Orders", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Clients", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__Orders__ClientID__628FA481")
                        .IsRequired();

                    b.HasOne("ZenithFit.WebAPI.Database.Users", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Orders__UserID__6383C8BA");

                    b.HasOne("ZenithFit.WebAPI.Database.Warehouses", "Warehouse")
                        .WithMany("Orders")
                        .HasForeignKey("WarehouseId")
                        .HasConstraintName("FK__Orders__Warehous__619B8048")
                        .IsRequired();
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.ProcurementDetails", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Articles", "Article")
                        .WithMany("ProcurementDetails")
                        .HasForeignKey("ArticleId")
                        .HasConstraintName("FK__Procureme__Artic__5EBF139D")
                        .IsRequired();

                    b.HasOne("ZenithFit.WebAPI.Database.Procurements", "Procurement")
                        .WithMany("ProcurementDetails")
                        .HasForeignKey("ProcurementId")
                        .HasConstraintName("FK__Procureme__Procu__5DCAEF64")
                        .IsRequired();
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Procurements", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Suppliers", "Supplier")
                        .WithMany("Procurements")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK__Procureme__Suppl__5AEE82B9")
                        .IsRequired();

                    b.HasOne("ZenithFit.WebAPI.Database.Users", "User")
                        .WithMany("Procurements")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Procureme__UserI__59FA5E80")
                        .IsRequired();

                    b.HasOne("ZenithFit.WebAPI.Database.Warehouses", "Warehouse")
                        .WithMany("Procurements")
                        .HasForeignKey("WarehouseId")
                        .HasConstraintName("FK__Procureme__Wareh__59063A47")
                        .IsRequired();
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Ratings", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Articles", "Article")
                        .WithMany("Ratings")
                        .HasForeignKey("ArticleId")
                        .HasConstraintName("FK__Ratings__Article__5629CD9C")
                        .IsRequired();

                    b.HasOne("ZenithFit.WebAPI.Database.Clients", "Client")
                        .WithMany("Ratings")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__Ratings__ClientI__5535A963")
                        .IsRequired();
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.RequestDetails", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Requests", "Request")
                        .WithMany("RequestDetails")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("FK__RequestDe__Reque__47DBAE45")
                        .IsRequired();

                    b.HasOne("ZenithFit.WebAPI.Database.Users", "User")
                        .WithMany("RequestDetails")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__RequestDe__UserI__48CFD27E")
                        .IsRequired();
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Requests", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Clients", "Client")
                        .WithMany("Requests")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__Requests__Client__44FF419A")
                        .IsRequired();
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.UserRoles", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Roles", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__UserRoles__RoleI__52593CB8")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZenithFit.WebAPI.Database.Users", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserRoles__Chang__5165187F")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
