// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZenithFit.WebAPI.Database;

namespace ZenithFit.WebAPI.Migrations
{
    [DbContext(typeof(ZenithFitDatabaseContext))]
    partial class ZenithFitDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Articles", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ArticleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArticleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte[]>("ArticlePicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ArticlePictureThumb")
                        .HasColumnType("varbinary(max)");

                    b.Property<decimal>("ArticlePrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<bool?>("ArticleStatus")
                        .HasColumnType("bit");

                    b.Property<int>("CategoryId")
                        .HasColumnName("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("ManufacturerId")
                        .HasColumnName("ManufacturerID")
                        .HasColumnType("int");

                    b.HasKey("ArticleId")
                        .HasName("PK__Articles__9C6270C826A134A7");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            ArticleId = 1,
                            ArticleCode = "2314",
                            ArticleName = "Protein1",
                            ArticlePrice = 300m,
                            ArticleStatus = true,
                            CategoryId = 1,
                            ManufacturerId = 1
                        },
                        new
                        {
                            ArticleId = 2,
                            ArticleCode = "2312541",
                            ArticleName = "Protein2",
                            ArticlePrice = 321m,
                            ArticleStatus = true,
                            CategoryId = 1,
                            ManufacturerId = 1
                        },
                        new
                        {
                            ArticleId = 3,
                            ArticleCode = "42312",
                            ArticleName = "Weight3",
                            ArticlePrice = 232m,
                            ArticleStatus = true,
                            CategoryId = 2,
                            ManufacturerId = 2
                        },
                        new
                        {
                            ArticleId = 4,
                            ArticleCode = "23121",
                            ArticleName = "Weight2",
                            ArticlePrice = 664m,
                            ArticleStatus = true,
                            CategoryId = 2,
                            ManufacturerId = 2
                        },
                        new
                        {
                            ArticleId = 5,
                            ArticleCode = "5675",
                            ArticleName = "Random3",
                            ArticlePrice = 213m,
                            ArticleStatus = true,
                            CategoryId = 3,
                            ManufacturerId = 2
                        },
                        new
                        {
                            ArticleId = 6,
                            ArticleCode = "756543",
                            ArticleName = "Item7",
                            ArticlePrice = 421m,
                            ArticleStatus = true,
                            CategoryId = 3,
                            ManufacturerId = 3
                        },
                        new
                        {
                            ArticleId = 7,
                            ArticleCode = "123115",
                            ArticleName = "Something3",
                            ArticlePrice = 122m,
                            ArticleStatus = true,
                            CategoryId = 3,
                            ManufacturerId = 4
                        });
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Categories", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CategoryID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("CategoryId")
                        .HasName("PK__Categori__19093A2B0E46F8E4");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Proteini"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "WeightGainer"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Pre-workout"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Fat-burner"
                        });
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Clients", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ClientID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientEmail")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ClientFirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ClientLastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ClientPhone")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ClientRegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClientUsername")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ClientId")
                        .HasName("PK__Clients__E67E1A044D08DA90");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            ClientEmail = "testing1@email.com",
                            ClientFirstName = "Amer",
                            ClientLastName = "Bilic",
                            ClientPhone = "1233455",
                            ClientRegisterDate = new DateTime(2021, 2, 3, 23, 21, 6, 895, DateTimeKind.Local).AddTicks(6055),
                            ClientUsername = "mobile",
                            PasswordHash = "qEkPhwY9P2FiDqx1Rgg26GoapxE=",
                            PasswordSalt = "fVZy3b4Z1cvYNep/oXc7aA=="
                        },
                        new
                        {
                            ClientId = 2,
                            ClientEmail = "testing2@email.com",
                            ClientFirstName = "Denis",
                            ClientLastName = "Bajrektarevic",
                            ClientPhone = "312314",
                            ClientRegisterDate = new DateTime(2021, 2, 3, 23, 21, 6, 898, DateTimeKind.Local).AddTicks(2302),
                            ClientUsername = "hajfo",
                            PasswordHash = "r577PsUb6lkHEs32NUsQHbqEhqc=",
                            PasswordSalt = "jpiaSiCqXBnw1z4lUnuRww=="
                        },
                        new
                        {
                            ClientId = 3,
                            ClientEmail = "testing3@email.com",
                            ClientFirstName = "Ajdin",
                            ClientLastName = "Muftic",
                            ClientPhone = "4133211",
                            ClientRegisterDate = new DateTime(2021, 2, 3, 23, 21, 6, 898, DateTimeKind.Local).AddTicks(2397),
                            ClientUsername = "zake123",
                            PasswordHash = "ZnhzTGY3bXxC4FoYf7FEzHB+w/c=",
                            PasswordSalt = "hx1Yw2OJcF/dQGfUKNhQgg=="
                        },
                        new
                        {
                            ClientId = 4,
                            ClientEmail = "testing4@email.com",
                            ClientFirstName = "Beze",
                            ClientLastName = "Kaljic",
                            ClientPhone = "5141231",
                            ClientRegisterDate = new DateTime(2021, 2, 3, 23, 21, 6, 898, DateTimeKind.Local).AddTicks(2405),
                            ClientUsername = "tarke321",
                            PasswordHash = "r577PsUb6lkHEs32NUsQHbqEhqc=",
                            PasswordSalt = "jpiaSiCqXBnw1z4lUnuRww=="
                        });
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.CompleteOrder", b =>
                {
                    b.Property<int>("CompleteOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CompleteOrderID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnName("ClientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CompleteOrderDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("CompleteOrderSent")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnName("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("CompleteOrderId");

                    b.HasIndex("ClientId");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("CompleteOrder");

                    b.HasData(
                        new
                        {
                            CompleteOrderId = 1,
                            ClientId = 1,
                            CompleteOrderDate = new DateTime(2021, 2, 8, 23, 21, 6, 900, DateTimeKind.Local).AddTicks(3056),
                            CompleteOrderSent = true,
                            OrderId = 1,
                            UserId = 1
                        },
                        new
                        {
                            CompleteOrderId = 2,
                            ClientId = 2,
                            CompleteOrderDate = new DateTime(2021, 2, 8, 23, 21, 6, 900, DateTimeKind.Local).AddTicks(3973),
                            CompleteOrderSent = true,
                            OrderId = 2,
                            UserId = 2
                        },
                        new
                        {
                            CompleteOrderId = 3,
                            ClientId = 3,
                            CompleteOrderDate = new DateTime(2021, 2, 8, 23, 21, 6, 900, DateTimeKind.Local).AddTicks(4002),
                            CompleteOrderSent = true,
                            OrderId = 3,
                            UserId = 3
                        },
                        new
                        {
                            CompleteOrderId = 4,
                            ClientId = 4,
                            CompleteOrderDate = new DateTime(2021, 2, 8, 23, 21, 6, 900, DateTimeKind.Local).AddTicks(4006),
                            CompleteOrderSent = true,
                            OrderId = 4,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Manufacturers", b =>
                {
                    b.Property<int>("ManufacturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ManufacturerID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ManufacturerName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ManufacturerId")
                        .HasName("PK__Manufact__357E5CA1584EC634");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            ManufacturerId = 1,
                            ManufacturerName = "Olymp"
                        },
                        new
                        {
                            ManufacturerId = 2,
                            ManufacturerName = "MyProtein"
                        },
                        new
                        {
                            ManufacturerId = 3,
                            ManufacturerName = "IronMaxx"
                        },
                        new
                        {
                            ManufacturerId = 4,
                            ManufacturerName = "RedWeiller"
                        });
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Notices", b =>
                {
                    b.Property<int>("NoticeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NoticeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("NoticeImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NoticeText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoticeTitle")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("NoticeId")
                        .HasName("PK__Notices__CE83CB858F8BDC96");

                    b.HasIndex("UserId");

                    b.ToTable("Notices");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.OrderDetails", b =>
                {
                    b.Property<int>("OrderDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrderDetailsID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("ArticleId")
                        .HasColumnName("ArticleID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("OrderId")
                        .HasColumnName("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("OrderDetailsId");

                    b.HasIndex("ArticleId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            OrderDetailsId = 1,
                            Amount = 7,
                            ArticleId = 1,
                            Discount = 5m,
                            OrderId = 1,
                            Price = 230m
                        },
                        new
                        {
                            OrderDetailsId = 2,
                            Amount = 7,
                            ArticleId = 1,
                            Discount = 5m,
                            OrderId = 2,
                            Price = 777m
                        },
                        new
                        {
                            OrderDetailsId = 3,
                            Amount = 6,
                            ArticleId = 3,
                            Discount = 5m,
                            OrderId = 3,
                            Price = 66m
                        },
                        new
                        {
                            OrderDetailsId = 4,
                            Amount = 11,
                            ArticleId = 2,
                            Discount = 5m,
                            OrderId = 4,
                            Price = 23m
                        });
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Orders", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrderID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnName("ClientID")
                        .HasColumnType("int");

                    b.Property<bool?>("OrderCancelled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("OrderPriceNoTax")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("OrderPriceTax")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("OrderStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseId")
                        .HasColumnName("WarehouseID")
                        .HasColumnType("int");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__C3905BAF4AE8A624");

                    b.HasIndex("ClientId");

                    b.HasIndex("UserId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ClientId = 1,
                            OrderCancelled = false,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = "N00-212315412",
                            OrderPriceNoTax = 466m,
                            OrderPriceTax = 545m,
                            OrderStatus = true,
                            UserId = 1,
                            WarehouseId = 1
                        },
                        new
                        {
                            OrderId = 2,
                            ClientId = 1,
                            OrderCancelled = false,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = "N00-212315413",
                            OrderPriceNoTax = 555m,
                            OrderPriceTax = 777m,
                            OrderStatus = true,
                            UserId = 1,
                            WarehouseId = 1
                        },
                        new
                        {
                            OrderId = 3,
                            ClientId = 2,
                            OrderCancelled = false,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = "N00-212315444",
                            OrderPriceNoTax = 666m,
                            OrderPriceTax = 888m,
                            OrderStatus = true,
                            UserId = 1,
                            WarehouseId = 2
                        },
                        new
                        {
                            OrderId = 4,
                            ClientId = 3,
                            OrderCancelled = false,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = "N00-212315463",
                            OrderPriceNoTax = 777m,
                            OrderPriceTax = 999m,
                            OrderStatus = true,
                            UserId = 1,
                            WarehouseId = 3
                        });
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.ProcurementDetails", b =>
                {
                    b.Property<int>("ProcurementDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProcurementDetailID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("ArticleId")
                        .HasColumnName("ArticleID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProcurementId")
                        .HasColumnName("ProcurementID")
                        .HasColumnType("int");

                    b.HasKey("ProcurementDetailId")
                        .HasName("PK__Procurem__67666710DC9D5C2B");

                    b.HasIndex("ArticleId");

                    b.HasIndex("ProcurementId");

                    b.ToTable("ProcurementDetails");

                    b.HasData(
                        new
                        {
                            ProcurementDetailId = 1,
                            Amount = 2,
                            ArticleId = 1,
                            Price = 230m,
                            ProcurementId = 1
                        },
                        new
                        {
                            ProcurementDetailId = 2,
                            Amount = 2,
                            ArticleId = 3,
                            Price = 321m,
                            ProcurementId = 2
                        },
                        new
                        {
                            ProcurementDetailId = 3,
                            Amount = 3,
                            ArticleId = 2,
                            Price = 322m,
                            ProcurementId = 3
                        },
                        new
                        {
                            ProcurementDetailId = 4,
                            Amount = 1,
                            ArticleId = 1,
                            Price = 323m,
                            ProcurementId = 4
                        });
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Procurements", b =>
                {
                    b.Property<int>("ProcurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProcurementID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ProcurementAccountAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("ProcurementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProcurementNote")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ProcurementNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("ProcurementTax")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("SupplierId")
                        .HasColumnName("SupplierID")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseId")
                        .HasColumnName("WarehouseID")
                        .HasColumnType("int");

                    b.HasKey("ProcurementId")
                        .HasName("PK__Procurem__95B4518CAA2BF8FB");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UserId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Procurements");

                    b.HasData(
                        new
                        {
                            ProcurementId = 1,
                            ProcurementAccountAmount = 230m,
                            ProcurementDate = new DateTime(2021, 2, 8, 23, 21, 6, 899, DateTimeKind.Local).AddTicks(5496),
                            ProcurementNote = "This is a procurement",
                            ProcurementNumber = "2132152",
                            ProcurementTax = 5m,
                            SupplierId = 1,
                            UserId = 1,
                            WarehouseId = 1
                        },
                        new
                        {
                            ProcurementId = 2,
                            ProcurementAccountAmount = 23m,
                            ProcurementDate = new DateTime(2021, 2, 8, 23, 21, 6, 899, DateTimeKind.Local).AddTicks(7603),
                            ProcurementNote = "This is a procurement1",
                            ProcurementNumber = "2132132",
                            ProcurementTax = 5m,
                            SupplierId = 1,
                            UserId = 1,
                            WarehouseId = 1
                        },
                        new
                        {
                            ProcurementId = 3,
                            ProcurementAccountAmount = 24m,
                            ProcurementDate = new DateTime(2021, 2, 8, 23, 21, 6, 899, DateTimeKind.Local).AddTicks(7688),
                            ProcurementNote = "This is a procurement2",
                            ProcurementNumber = "2132162",
                            ProcurementTax = 5m,
                            SupplierId = 2,
                            UserId = 2,
                            WarehouseId = 2
                        },
                        new
                        {
                            ProcurementId = 4,
                            ProcurementAccountAmount = 25m,
                            ProcurementDate = new DateTime(2021, 2, 8, 23, 21, 6, 899, DateTimeKind.Local).AddTicks(7693),
                            ProcurementNote = "This is a procurement3",
                            ProcurementNumber = "2132182",
                            ProcurementTax = 5m,
                            SupplierId = 3,
                            UserId = 3,
                            WarehouseId = 3
                        });
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Ratings", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RatingID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleId")
                        .HasColumnName("ArticleID")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnName("ClientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("RatingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RatingGrade")
                        .HasColumnType("int");

                    b.HasKey("RatingId")
                        .HasName("PK__Ratings__FCCDF85CE0628B79");

                    b.HasIndex("ArticleId");

                    b.HasIndex("ClientId");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            RatingId = 1,
                            ArticleId = 1,
                            ClientId = 1,
                            RatingDate = new DateTime(2021, 2, 8, 23, 21, 6, 900, DateTimeKind.Local).AddTicks(507),
                            RatingGrade = 5
                        },
                        new
                        {
                            RatingId = 2,
                            ArticleId = 1,
                            ClientId = 2,
                            RatingDate = new DateTime(2021, 2, 8, 23, 21, 6, 900, DateTimeKind.Local).AddTicks(1654),
                            RatingGrade = 4
                        },
                        new
                        {
                            RatingId = 3,
                            ArticleId = 2,
                            ClientId = 3,
                            RatingDate = new DateTime(2021, 2, 8, 23, 21, 6, 900, DateTimeKind.Local).AddTicks(1687),
                            RatingGrade = 3
                        },
                        new
                        {
                            RatingId = 4,
                            ArticleId = 3,
                            ClientId = 4,
                            RatingDate = new DateTime(2021, 2, 8, 23, 21, 6, 900, DateTimeKind.Local).AddTicks(1691),
                            RatingGrade = 2
                        });
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.RequestDetails", b =>
                {
                    b.Property<int>("RequestDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RequestDetailsID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RequestId")
                        .HasColumnName("RequestID")
                        .HasColumnType("int");

                    b.Property<string>("RequestResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("RequestDetailsId");

                    b.HasIndex("RequestId");

                    b.HasIndex("UserId");

                    b.ToTable("RequestDetails");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Requests", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RequestID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnName("ClientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestDescription")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("RequestTitle")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("RequestId")
                        .HasName("PK__Requests__33A8519A648FA1C5");

                    b.HasIndex("ClientId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Roles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RoleNote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE3A32FDA6D3");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin",
                            RoleNote = "Administrator"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Employee",
                            RoleNote = "Employee"
                        });
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Suppliers", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SupplierID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SupplierAddress")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SupplierBankAccount")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SupplierContact")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SupplierEmail")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SupplierNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierPhone")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool>("SupplierStatus")
                        .HasColumnType("bit");

                    b.Property<string>("SupplierWeb")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("SupplierId")
                        .HasName("PK__Supplier__4BE66694FF6CCDB0");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            SupplierAddress = "Random address",
                            SupplierBankAccount = "12315125",
                            SupplierContact = "supcontact",
                            SupplierEmail = "supplier1@email.com",
                            SupplierName = "Supplier",
                            SupplierNote = "He is a supplier",
                            SupplierPhone = "12312541",
                            SupplierStatus = true,
                            SupplierWeb = "www.supplier.com"
                        },
                        new
                        {
                            SupplierId = 2,
                            SupplierAddress = "Random address2",
                            SupplierBankAccount = "123151254",
                            SupplierContact = "supcontact2",
                            SupplierEmail = "supplier2@email.com",
                            SupplierName = "Supplier2",
                            SupplierNote = "He is a supplier",
                            SupplierPhone = "123125412",
                            SupplierStatus = true,
                            SupplierWeb = "www.supplier2.com"
                        },
                        new
                        {
                            SupplierId = 3,
                            SupplierAddress = "Random address3",
                            SupplierBankAccount = "123151251",
                            SupplierContact = "supcontact3",
                            SupplierEmail = "supplier3@email.com",
                            SupplierName = "Supplier3",
                            SupplierNote = "He is a supplier",
                            SupplierPhone = "123125413",
                            SupplierStatus = true,
                            SupplierWeb = "www.supplier22.com"
                        },
                        new
                        {
                            SupplierId = 4,
                            SupplierAddress = "Random address4",
                            SupplierBankAccount = "123151252",
                            SupplierContact = "supcontact4",
                            SupplierEmail = "supplier4@email.com",
                            SupplierName = "Supplier4",
                            SupplierNote = "He is a supplier",
                            SupplierPhone = "123125414",
                            SupplierStatus = true,
                            SupplierWeb = "www.supplier222.com"
                        });
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.UserRoles", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserRoleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnName("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId")
                        .HasName("PK__UserRole__3D978A55393233A9");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserRoleId = 1,
                            ChangeDate = new DateTime(2021, 2, 8, 23, 21, 6, 900, DateTimeKind.Local).AddTicks(7816),
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            UserRoleId = 2,
                            ChangeDate = new DateTime(2021, 2, 8, 23, 21, 6, 900, DateTimeKind.Local).AddTicks(8194),
                            RoleId = 2,
                            UserId = 2
                        },
                        new
                        {
                            UserRoleId = 3,
                            ChangeDate = new DateTime(2021, 2, 8, 23, 21, 6, 900, DateTimeKind.Local).AddTicks(8207),
                            RoleId = 2,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserFirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UserLastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UserPhone")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UserUsername")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC54B38ACA");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            PasswordHash = "qEkPhwY9P2FiDqx1Rgg26GoapxE=",
                            PasswordSalt = "fVZy3b4Z1cvYNep/oXc7aA==",
                            UserEmail = "testing33@email.com",
                            UserFirstName = "Amer",
                            UserLastName = "Hajfic",
                            UserPhone = "3213215",
                            UserUsername = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            PasswordHash = "qEkPhwY9P2FiDqx12gg26GoapxE=",
                            PasswordSalt = "fVZy3b4Z1cvYNep/oXc7dA==",
                            UserEmail = "testing333@email.com",
                            UserFirstName = "Denis",
                            UserLastName = "Beso",
                            UserPhone = "32132154",
                            UserUsername = "denje"
                        },
                        new
                        {
                            UserId = 3,
                            PasswordHash = "qEkPhwY9P2FiDqx17gg26GoapxE=",
                            PasswordSalt = "fVZy3b4Z1cvYNep/oXc7wA==",
                            UserEmail = "testing343@email.com",
                            UserFirstName = "Imad",
                            UserLastName = "Spahic",
                            UserPhone = "32132157",
                            UserUsername = "samar"
                        });
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Warehouses", b =>
                {
                    b.Property<int>("WarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WarehouseID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("WarehouseAddress")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("WarehouseName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("WarehouseNote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WarehouseId")
                        .HasName("PK__Warehous__2608AFD92D3BBDD6");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            WarehouseId = 1,
                            WarehouseAddress = "Address1",
                            WarehouseName = "Warehouse1",
                            WarehouseNote = "This is a note"
                        },
                        new
                        {
                            WarehouseId = 2,
                            WarehouseAddress = "Address1",
                            WarehouseName = "Warehouse2",
                            WarehouseNote = "This is a note"
                        },
                        new
                        {
                            WarehouseId = 3,
                            WarehouseAddress = "Address3",
                            WarehouseName = "Pre-Warehouse3",
                            WarehouseNote = "This is a note"
                        },
                        new
                        {
                            WarehouseId = 4,
                            WarehouseAddress = "Address4",
                            WarehouseName = "Fat-Warehouse4",
                            WarehouseNote = "This is a note"
                        });
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Articles", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Categories", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Articles__Catego__4E88ABD4")
                        .IsRequired();

                    b.HasOne("ZenithFit.WebAPI.Database.Manufacturers", "Manufacturer")
                        .WithMany("Articles")
                        .HasForeignKey("ManufacturerId")
                        .HasConstraintName("FK__Articles__Manufa__4D94879B")
                        .IsRequired();
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.CompleteOrder", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Clients", "Client")
                        .WithMany("CompleteOrder")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__CompleteO__Clien__693CA210")
                        .IsRequired();

                    b.HasOne("ZenithFit.WebAPI.Database.Orders", "Order")
                        .WithMany("CompleteOrder")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__CompleteO__Order__6B24EA82")
                        .IsRequired();

                    b.HasOne("ZenithFit.WebAPI.Database.Users", "User")
                        .WithMany("CompleteOrder")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__CompleteO__UserI__6A30C649")
                        .IsRequired();
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Notices", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Users", "User")
                        .WithMany("Notices")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Notices__UserID__3C69FB99")
                        .IsRequired();
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.OrderDetails", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Articles", "Article")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ArticleId")
                        .HasConstraintName("FK__OrderDeta__Artic__66603565");
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Orders", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Clients", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__Orders__ClientID__628FA481")
                        .IsRequired();

                    b.HasOne("ZenithFit.WebAPI.Database.Users", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Orders__UserID__6383C8BA");

                    b.HasOne("ZenithFit.WebAPI.Database.Warehouses", "Warehouse")
                        .WithMany("Orders")
                        .HasForeignKey("WarehouseId")
                        .HasConstraintName("FK__Orders__Warehous__619B8048")
                        .IsRequired();
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.ProcurementDetails", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Articles", "Article")
                        .WithMany("ProcurementDetails")
                        .HasForeignKey("ArticleId")
                        .HasConstraintName("FK__Procureme__Artic__5EBF139D")
                        .IsRequired();

                    b.HasOne("ZenithFit.WebAPI.Database.Procurements", "Procurement")
                        .WithMany("ProcurementDetails")
                        .HasForeignKey("ProcurementId")
                        .HasConstraintName("FK__Procureme__Procu__5DCAEF64")
                        .IsRequired();
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Procurements", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Suppliers", "Supplier")
                        .WithMany("Procurements")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK__Procureme__Suppl__5AEE82B9")
                        .IsRequired();

                    b.HasOne("ZenithFit.WebAPI.Database.Users", "User")
                        .WithMany("Procurements")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Procureme__UserI__59FA5E80")
                        .IsRequired();

                    b.HasOne("ZenithFit.WebAPI.Database.Warehouses", "Warehouse")
                        .WithMany("Procurements")
                        .HasForeignKey("WarehouseId")
                        .HasConstraintName("FK__Procureme__Wareh__59063A47")
                        .IsRequired();
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Ratings", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Articles", "Article")
                        .WithMany("Ratings")
                        .HasForeignKey("ArticleId")
                        .HasConstraintName("FK__Ratings__Article__5629CD9C")
                        .IsRequired();

                    b.HasOne("ZenithFit.WebAPI.Database.Clients", "Client")
                        .WithMany("Ratings")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__Ratings__ClientI__5535A963")
                        .IsRequired();
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.RequestDetails", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Requests", "Request")
                        .WithMany("RequestDetails")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("FK__RequestDe__Reque__47DBAE45")
                        .IsRequired();

                    b.HasOne("ZenithFit.WebAPI.Database.Users", "User")
                        .WithMany("RequestDetails")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__RequestDe__UserI__48CFD27E")
                        .IsRequired();
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.Requests", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Clients", "Client")
                        .WithMany("Requests")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__Requests__Client__44FF419A")
                        .IsRequired();
                });

            modelBuilder.Entity("ZenithFit.WebAPI.Database.UserRoles", b =>
                {
                    b.HasOne("ZenithFit.WebAPI.Database.Roles", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__UserRoles__RoleI__52593CB8")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZenithFit.WebAPI.Database.Users", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserRoles__Chang__5165187F")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
